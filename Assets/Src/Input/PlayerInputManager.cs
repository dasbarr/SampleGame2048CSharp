using System.Linq;
using R3;

namespace SampleGame2048 {

    /// <summary>
    /// Handles player input.
    /// </summary>
    public class PlayerInputManager {
        
        //-------------------------------------------------------------
        // Nested
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Dependencies
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Class constants
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Class variables
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Class methods
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Constructor/finalizer
        //-------------------------------------------------------------

        public PlayerInputManager() {
            var inputActions = new InputActions();

            // convert input to Move stream
            PlayerInput = inputActions.Game.Get().actions
                .Select(x => x.ToMoveObservable())
                .Merge();

            // enable/disable input actions when necessary
            Active
                .Subscribe(x => {
                    if (x) {
                        inputActions.Enable();
                    }
                    else {
                        inputActions.Disable();
                    }
                });
        }
        
        //-------------------------------------------------------------
        // Variables
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Properties
        //-------------------------------------------------------------

        /// <summary>
        /// Move stream that represents player's input.
        /// </summary>
        public Observable<Move> PlayerInput { get; }

        /// <summary>
        /// Player input will be registered only when input manager is active.
        /// </summary>
        public ReactiveProperty<bool> Active { get; } = new ReactiveProperty<bool>(true);

        //-------------------------------------------------------------
        // Private properties serialized for Unity
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Events
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Public methods
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Protected methods
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Private methods
        //-------------------------------------------------------------
        
        //-------------------------------------------------------------
        // Unity methods
        //-------------------------------------------------------------
    }
}
